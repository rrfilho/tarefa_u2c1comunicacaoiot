# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
#if(WIN32)
#    set(USERHOME $ENV{USERPROFILE})
#else()
#    set(USERHOME $ENV{HOME})
#endif()
#set(sdkVersion 2.1.0)
#set(toolchainVersion 13_3_Rel1)
#set(picotoolVersion 2.1.0)
#set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
#if (EXISTS ${picoVscode})
#    include(${picoVscode})
#endif()
# ====================================================================================

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(PICO_BOARD pico_w CACHE STRING "Board type")
include(pico_sdk_import.cmake)

project(webserver C CXX ASM)
pico_sdk_init()

include_directories(${CMAKE_SOURCE_DIR}/libs)

add_executable(${PROJECT_NAME} main.c libs/bootsel.c libs/leds.c libs/temperature_sensor.c libs/display.c libs/wifi.c libs/webserver.c)

target_link_libraries(
    ${PROJECT_NAME} 
    pico_stdlib
    hardware_adc
    hardware_i2c
    pico_cyw43_arch_lwip_threadsafe_background
)

target_include_directories(
    ${PROJECT_NAME} PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}
    ${PICO_SDK_PATH}/lib/lwip/src/include
    ${PICO_SDK_PATH}/lib/lwip/src/include/arch
    ${PICO_SDK_PATH}/lib/lwip/src/include/lwip
)

target_sources(
    ${PROJECT_NAME} PRIVATE
    ${PICO_SDK_PATH}/lib/lwip/src/apps/http/httpd.c
    ${PICO_SDK_PATH}/lib/lwip/src/apps/http/fs.c
)

pico_enable_stdio_uart(webserver 1)
pico_enable_stdio_usb(webserver 1)

pico_add_extra_outputs(webserver)
